---

- name: "6.1.1 | AUDIT | Audit system file permissions"
  block:
      - name: "6.1.1 | AUDIT | Audit system file permissions | Audit the packages"
        shell: rpm -Va --nomtime --nosize --nomd5 --nolinkto
        changed_when: false
        failed_when: false
        register: rhel8cis_6_1_1_packages_rpm

      - name: "6.1.1 | AUDIT | Audit system file permissions | Create list and warning"
        block:
            - name: "6.1.1 | AUDIT | Audit system file permissions | Add file discrepancy list to system"
              copy:
                  dest: "{{ rhel8cis_rpm_audit_file }}"  # noqa template-instead-of-copy
                  content: "{{ rhel8cis_6_1_1_packages_rpm.stdout }}"
                  owner: root
                  group: root
                  mode: 0644

            - name: "6.1.1 | AUDIT | Audit system file permissions | Message out alert for package descrepancies"
              debug:
                  msg: |
                     "Warning!! You have some package descrepancies issues.
                      The file list can be found in {{ rhel8cis_rpm_audit_file }}"
              when: rhel8cis_6_1_1_packages_rpm.stdout|length > 0

            - name: "6.1.1 | AUDIT | Audit system file permissions | Warn Count"
              ansible.builtin.import_tasks: warning_facts.yml
              vars:
                  warn_control_id: '6.1.1'
              when: rhel8cis_6_1_1_packages_rpm.stdout | length > 0

  when:
      - rhel8cis_rule_6_1_1
  tags:
      - level2-server
      - level2-workstation
      - manual
      - audit
      - permissions
      - rule_6.1.1

- name: "6.1.2 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: false
  failed_when: false
  when:
      - rhel8cis_rule_6_1_2
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - automated
      - patch
      - stickybits
      - permissons
      - rule_6.1.2

- name: "6.1.3 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      path: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.3

- name: "6.1.4 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      path: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel8cis_rule_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.4

- name: "6.1.5 | PATCH |  Ensure permissions on /etc/group are configured"
  file:
      path: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_6_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.5

- name: "6.1.6 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      path: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel8cis_rule_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.6

- name: "6.1.7 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      path: /etc/passwd-
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_6_1_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.7

- name: "6.1.8 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      path: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel8cis_rule_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.8

- name: "6.1.9 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      path: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_6_1_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissionss
      - rule_6.1.9

- name: "6.1.10 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      path: /etc/gshadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel8cis_rule_6_1_10
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - permissions
      - rule_6.1.10

- name: "6.1.11 | PATCH | Ensure no world writable files exist"
  block:
      - name: "6.1.11 | AUDIT | Ensure no world writable files exist | Get list of world-writable files"
        shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
        failed_when: false
        changed_when: false
        register: rhel_08_6_1_11_perms_results

      - name: "6.1.11 | AUDIT | Ensure no world writable files exist | Alert no world-writable files exist"
        debug:
            msg: "Good news! We have not found any world-writable files on your system"
        when:
            - rhel_08_6_1_11_perms_results.stdout is not defined

      - name: "6.1.11 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist (Configurable)"
        file:
            path: '{{ item }}'
            mode: o-w
            state: touch
        with_items: "{{ rhel_08_6_1_11_perms_results.stdout_lines }}"
        when:
            - rhel_08_6_1_11_perms_results.stdout_lines is defined
            - rhel8cis_no_world_write_adjust

      - name: "6.1.11 | AUDIT | Ensure no world writable files exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.11'
        when:
            - rhel_08_6_1_11_perms_results.stdout_lines is defined
            - not rhel8cis_no_world_write_adjust
  when:
      - rhel8cis_rule_6_1_11
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - files
      - permissions
      - rule_6.1.11

- name: "6.1.12 | AUDIT | Ensure no unowned files or directories exist"
  block:
      - name: "6.1.12 | AUDIT | Ensure no unowned files or directories exist | Finding all unowned files or directories"
        command: find "{{ item.mount }}" -xdev -nouser
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel_08_6_1_12_audit
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when: item['device'].startswith('/dev') and not 'bind' in item['options']

      - name: "6.1.12 | AUDIT | Ensure no unowned files or directories exist | Displaying any unowned files or directories"
        debug:
            msg: "Manual intervention is required -- missing owner on items in {{ item.item.mount }}: {{ item.stdout_lines | join(', ') }}"
        with_items: "{{ rhel_08_6_1_12_audit.results }}"
        register: rhel_08_6_1_12_unowned_files
        when:
            - item.stdout_lines is defined
            - item.stdout_lines | length > 0

      - name: "6.1.12 | AUDIT | Ensure no unowned files or directories exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.12'
        when:
            - not rhel_08_6_1_12_unowned_files.skipped
  when:
      - rhel8cis_rule_6_1_12
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - files
      - permissions
      - rule_6.1.12

- name: "6.1.13 | AUDIT | Ensure no ungrouped files or directories exist"
  block:
      - name: "6.1.13 | AUDIT | Ensure no ungrouped files or directories exist | Finding all ungrouped files or directories"
        command: find "{{ item.mount }}" -xdev -nogroup
        check_mode: false
        failed_when: false
        changed_when: false
        register: rhel_08_6_1_13_audit
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when: item['device'].startswith('/dev') and not 'bind' in item['options']

      - name: "6.1.13 | AUDIT | Ensure no ungrouped files or directories exist | Displaying all ungrouped files or directories"
        debug:
            msg: "Manual intervention is required -- missing group on items in {{ item.item.mount }}: {{ item.stdout_lines | join(', ') }}"
        with_items: "{{ rhel_08_6_1_13_audit.results }}"
        register: rhel_08_6_1_13_ungrouped_files
        when:
            - item.stdout_lines is defined
            - item.stdout_lines | length > 0

      - name: "6.1.13 | AUDIT | Ensure no ungrouped files or directories exist | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.13'
        when: not rhel_08_6_1_13_ungrouped_files.skipped

  when:
      - rhel8cis_rule_6_1_13
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - files
      - permissions
      - rule_6.1.13

- name: "6.1.14 | AUDIT | Audit SUID executables"
  block:
      - name: "6.1.14 | AUDIT | Audit SUID executables | Find all SUID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000
        failed_when: false
        changed_when: false
        register: rhel_08_6_1_14_perms_results
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.14 | AUDIT | Audit SUID executables |  Alert SUID executables exist"
        debug:
            msg: "Manual intervention is required -- SUID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items: "{{ rhel_08_6_1_14_perms_results.stdout_lines }}"
        when:
            - rhel_08_6_1_14_perms_results.stdout is defined

      - name: "6.1.14 | AUDIT | Audit SUID executables | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.14'
        when:
            - rhel_08_6_1_14_perms_results.stdout is defined
  when:
      - rhel8cis_rule_6_1_14
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - files
      - rule_6.1.14

- name: "6.1.15 | AUDIT | Audit SGID executables"
  block:
      - name: "6.1.15 | AUDIT | Audit SGID executables | Find all SGID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000
        failed_when: false
        changed_when: false
        register: rhel_08_6_1_15_perms_results
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.15 | AUDIT | Audit SGID executables |  Alert SGID executables exist"
        debug:
            msg: "Manual intervention is required -- SGID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items: "{{ rhel_08_6_1_15_perms_results.stdout_lines }}"
        when:
            - rhel_08_6_1_15_perms_results.stdout is defined

      - name: "6.1.15 | AUDIT | Audit SGID executables | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '6.1.15'
        when:
            - rhel_08_6_1_15_perms_results.stdout is defined
  when:
      - rhel8cis_rule_6_1_15
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - files
      - rule_6.1.15
